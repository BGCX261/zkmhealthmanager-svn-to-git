<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="healthmanager.modelo.dao.Indice_deanDao">

	

	<resultMap id="indice_deanMap" type="indice_dean">
		<result column="codigo_empresa" property="codigo_empresa" />
		<result column="codigo_sucursal" property="codigo_sucursal" />
		<result column="nro_historia" property="nro_historia" />
		<result column="nro_indice" property="nro_indice" />
		<result column="convencion" property="convencion" />
		<result column="creacion_date" property="creacion_date" />
		<result column="ultimo_update" property="ultimo_update" />
		<result column="creacion_user" property="creacion_user" />
		<result column="delete_date" property="delete_date" />
		<result column="ultimo_user" property="ultimo_user" />
		<result column="delete_user" property="delete_user" />
	</resultMap>

	<insert id="crear" parameterType="indice_dean">
		insert into public.indice_dean (codigo_empresa,codigo_sucursal,
		nro_historia,nro_indice,convencion,
		creacion_date,ultimo_update,creacion_user,
		delete_date,ultimo_user,delete_user)

		values (#{codigo_empresa},#{codigo_sucursal},
		#{nro_historia},#{nro_indice},#{convencion},
		#{creacion_date},#{ultimo_update},#{creacion_user},
		#{delete_date},#{ultimo_user},#{delete_user})
	</insert>

	<update id="actualizar" parameterType="indice_dean">
		update public.indice_dean set codigo_empresa = #{codigo_empresa},
		codigo_sucursal = #{codigo_sucursal},nro_historia = #{nro_historia},
		nro_indice = #{nro_indice},convencion = #{convencion},
		creacion_date = #{creacion_date},ultimo_update = #{ultimo_update},
		creacion_user = #{creacion_user},delete_date = #{delete_date},
		ultimo_user = #{ultimo_user},delete_user = #{delete_user}
		where codigo_empresa = #{codigo_empresa}
		and codigo_sucursal = #{codigo_sucursal}
		and nro_historia = #{nro_historia}
		and nro_indice = #{nro_indice}
	</update>

	<select id="consultar" resultMap="indice_deanMap" parameterType="indice_dean">
		select codigo_empresa,codigo_sucursal,
		nro_historia,nro_indice,convencion,creacion_date,
		ultimo_update,creacion_user,delete_date,ultimo_user,
		delete_user
		from public.indice_dean where codigo_empresa = #{codigo_empresa}
		and codigo_sucursal = #{codigo_sucursal} and nro_historia = #{nro_historia}
		and nro_indice = #{nro_indice}
	</select>

	<delete id="eliminar" parameterType="indice_dean">
		delete from public.indice_dean
		where codigo_empresa = #{codigo_empresa}
		and codigo_sucursal = #{codigo_sucursal} and nro_historia = #{nro_historia}
		and nro_indice = #{nro_indice}
	</delete>

	<select id="listar" resultMap="indice_deanMap" parameterType="java.util.Map">
		select codigo_empresa,codigo_sucursal,
		nro_historia,nro_indice,convencion,creacion_date,
		ultimo_update,creacion_user,delete_date,ultimo_user,
		delete_user
		from public.indice_dean 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="codigo_empresa != null">AND codigo_empresa = #{codigo_empresa}</if>
			<if test="codigo_sucursal != null">AND codigo_sucursal = #{codigo_sucursal}</if>
			<if test="nro_historia != null">AND nro_historia = #{nro_historia}</if>
			<if test="parameter != null">AND ${parameter} like '${value}'</if>
		</trim>
		<if test="limite_paginado != null">
		${limite_paginado}
		</if>
	</select>

	<select id="existe" resultType="java.lang.Boolean" parameterType="indice_dean">
		select count(1) != 0 AS exist 		from public.indice_dean 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="codigo_empresa != null">AND codigo_empresa = #{codigo_empresa}</if>
			<if test="codigo_sucursal != null">AND codigo_sucursal = #{codigo_sucursal}</if>
			<if test="parameter != null">AND ${parameter} like '${value}'</if>
		</trim>
		<if test="limit != null">
		${limit}
		</if>
	</select>

</mapper>
