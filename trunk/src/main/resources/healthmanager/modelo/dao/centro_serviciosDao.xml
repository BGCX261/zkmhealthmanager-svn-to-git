<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="healthmanager.modelo.dao.Centro_serviciosDao">

	<resultMap id="centro_serviciosMap" type="centro_servicios">
		<result column="codigo_empresa" property="codigo_empresa" />
		<result column="codigo_sucursal" property="codigo_sucursal" />
		<result column="codigo_centro" property="codigo_centro" />
		<result column="servicio_via_ingreso" property="servicio_via_ingreso" />
		<result column="creacion_date" property="creacion_date" />
		<result column="creacion_user" property="creacion_user" />
		<result column="ultimo_update" property="ultimo_update" />
		<result column="ultimo_user" property="ultimo_user" />
	</resultMap>

	<insert id="crear" parameterType="centro_servicios">
		insert into public.centro_servicios (codigo_empresa,codigo_sucursal,
		codigo_centro,servicio_via_ingreso,creacion_date,
		creacion_user,ultimo_update,ultimo_user)

		values (#{codigo_empresa},#{codigo_sucursal},
		#{codigo_centro},#{servicio_via_ingreso},#{creacion_date},
		#{creacion_user},#{ultimo_update},#{ultimo_user})
	</insert>

	<update id="actualizar" parameterType="centro_servicios">
		update public.centro_servicios set codigo_empresa = #{codigo_empresa},
		codigo_sucursal = #{codigo_sucursal},codigo_centro = #{codigo_centro},
		servicio_via_ingreso = #{servicio_via_ingreso},creacion_date = #{creacion_date},
		creacion_user = #{creacion_user},ultimo_update = #{ultimo_update},
		ultimo_user = #{ultimo_user}
		where 		codigo_empresa = #{codigo_empresa}
		and codigo_sucursal = #{codigo_sucursal}
		and codigo_centro = #{codigo_centro}
		and servicio_via_ingreso = #{servicio_via_ingreso}
	</update>

	<select id="consultar" parameterType="centro_servicios" resultMap="centro_serviciosMap">
		select codigo_empresa,codigo_sucursal,
		codigo_centro,servicio_via_ingreso,creacion_date,creacion_user,
		ultimo_update,ultimo_user
		from public.centro_servicios where codigo_empresa = #{codigo_empresa}
		and codigo_sucursal = #{codigo_sucursal} and codigo_centro = #{codigo_centro}
		and servicio_via_ingreso = #{servicio_via_ingreso}
	</select>

	<delete id="eliminar" parameterType="centro_servicios">
		delete from public.centro_servicios
		where codigo_empresa = #{codigo_empresa}
		and codigo_sucursal = #{codigo_sucursal} and codigo_centro = #{codigo_centro}
		<if test="servicio_via_ingreso != null">
		    and servicio_via_ingreso = #{servicio_via_ingreso}
		</if>
	</delete>

	<select id="listar" parameterType="java.util.Map" resultMap="centro_serviciosMap">
		select codigo_empresa,codigo_sucursal,
		codigo_centro,servicio_via_ingreso,creacion_date,creacion_user,
		ultimo_update,ultimo_user
		from public.centro_servicios 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="codigo_empresa != null">
			AND codigo_empresa = #{codigo_empresa}
			</if>
			<if test="codigo_sucursal != null">
			AND codigo_sucursal = #{codigo_sucursal}
			</if>
			<if test="codigo_centro != null">
			AND codigo_centro = #{codigo_centro}
			</if>
			<if test="parameter != null">
			AND ${parameter} like '${value}'
			</if>
		</trim>
		<if test="limit != null">
		${limit}
		</if>
	</select>

	<select id="existe" resultType="java.lang.Boolean">
		select count(1) != 0 AS exist 		from public.centro_servicios 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="codigo_empresa != null">
			AND codigo_empresa = #{codigo_empresa}
			</if>
			<if test="codigo_sucursal != null">
			AND codigo_sucursal = #{codigo_sucursal}
			</if>
			<if test="parameter != null">
			AND ${parameter} like '${value}'
			</if>
		</trim>
		<if test="limit != null">
		${limit}
		</if>
	</select>

</mapper>
