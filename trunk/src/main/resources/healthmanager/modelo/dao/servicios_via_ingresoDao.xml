<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="healthmanager.modelo.dao.Servicios_via_ingresoDao">

	<resultMap id="servicios_via_ingresoMap" type="servicios_via_ingreso">
		<result column="codigo_empresa" property="codigo_empresa" />
		<result column="codigo_registro" property="codigo_registro" />
		<result column="codigo_sucursal" property="codigo_sucursal" />
		<result column="codigo_servicio" property="codigo_servicio" />
		<result column="via_ingreso" property="via_ingreso" />
		<result column="creacion_date" property="creacion_date" />
		<result column="creacion_user" property="creacion_user" />
		<result column="tipo_elemento" property="tipo_elemento" />
		<result column="ev_codigo" property="elemento_via_ingreso.codigo" />
		<result column="ev_tipo" property="elemento_via_ingreso.tipo" />
		<result column="ev_descripcion" property="elemento_via_ingreso.descripcion" />
	</resultMap>

	<insert id="crear" parameterType="servicios_via_ingreso">
		insert into
		public.servicios_via_ingreso (codigo_empresa,codigo_sucursal,
		codigo_servicio,via_ingreso,creacion_date,
		creacion_user)

		values
		(#{codigo_empresa},#{codigo_sucursal},
		#{codigo_servicio},#{via_ingreso},#{creacion_date},
		#{creacion_user});
		
		<selectKey keyProperty="codigo_registro" resultType="java.lang.Long" >
		 	select last_value as codigo_registro from servicios_via_ingreso_codigo_registro_seq
		</selectKey>
		
	</insert>

	<update id="actualizar" parameterType="servicios_via_ingreso">
		update
		public.servicios_via_ingreso set codigo_empresa = #{codigo_empresa},
		codigo_sucursal = #{codigo_sucursal},codigo_servicio =
		#{codigo_servicio},
		via_ingreso = #{via_ingreso},creacion_date =
		#{creacion_date},
		creacion_user = #{creacion_user}
		where codigo_registro = #{codigo_registro}
	</update>

	<select id="consultar" parameterType="servicios_via_ingreso"
		resultMap="servicios_via_ingresoMap">
		select codigo_empresa,codigo_sucursal,
		codigo_servicio,via_ingreso,creacion_date,creacion_user,
		codigo_registro, 
		'via_ingreso' as tipo_elemento 
		from
		public.servicios_via_ingreso 
		
		<if test="codigo_registro != null">
			WHERE codigo_registro = #{codigo_registro}
		</if>
		<if test="codigo_registro == null" >
			where codigo_empresa = #{codigo_empresa}
			and codigo_sucursal = #{codigo_sucursal}
			and via_ingreso = #{via_ingreso}
			and codigo_servicio = #{codigo_servicio}
		</if>
		
	</select>

	<delete id="eliminar" parameterType="servicios_via_ingreso">
		delete from
		public.servicios_via_ingreso
		<if test="codigo_registro != null">
			WHERE codigo_registro = #{codigo_registro}
		</if>
		<if test="codigo_registro == null" >
			where codigo_empresa = #{codigo_empresa}
			and codigo_sucursal = #{codigo_sucursal}
			and via_ingreso = #{via_ingreso}
			and codigo_servicio = #{codigo_servicio}
		</if>
	</delete>

	<select id="listar" parameterType="java.util.Map" resultMap="servicios_via_ingresoMap">
		select svi.codigo_empresa,svi.codigo_sucursal,
		svi.codigo_servicio,svi.via_ingreso,svi.creacion_date,svi.creacion_user,
		codigo_registro,
		'via_ingreso' as tipo_elemento,
		evi.codigo as ev_codigo,
		evi.tipo as ev_tipo,
		evi.descripcion as ev_descripcion  
		from 
		public.servicios_via_ingreso svi 
		left join servicios_disponibles sd on (svi.codigo_servicio = sd.codigo)
		left join elemento evi on (svi.via_ingreso = evi.codigo and evi.tipo = 'via_ingreso')
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="codigo_empresa != null">
				AND svi.codigo_empresa = #{codigo_empresa}
			</if>
			<if test="codigo_sucursal != null">
				AND svi.codigo_sucursal = #{codigo_sucursal}
			</if>
			<if test="codigo_servicio != null">
				AND svi.codigo_servicio = #{codigo_servicio}
			</if>
			<if test="codigo_servicio_like != null">
				AND svi.codigo_servicio like '${codigo_servicio}%'
			</if>
			<if test="via_ingreso != null">
				AND svi.via_ingreso = #{via_ingreso}
			</if>
			
			<if test="via_ingreso_like != null">
				AND svi.via_ingreso like '${via_ingreso}%'
			</if>
			
			<if test="nombre_servicio != null">
				AND upper(sd.nombre) like '%${nombre_servicio}%'
			</if>
			
			<if test="nombre_via_ingreso != null">
				AND upper(evi.descripcion) like '%${nombre_via_ingreso}%'
			</if>
			
			<if test="via_ingreso_servicio != null">
				AND sd.via_ingreso = #{via_ingreso_servicio}
			</if>
			
			<if test="parametroTodo != null">
				AND 
					(lower(evi.descripcion) like '%${parametroTodo}%' OR 
					lower(evi.codigo) like '%${parametroTodo}%' OR 
					lower(sd.codigo) like '%${parametroTodo}%' OR 
					lower(sd.nombre) like '%${parametroTodo}%')
			</if>
			
			<if test="filtro_consulta != null">
				${filtro_consulta}
			</if>
		</trim>
		order by CAST(svi.via_ingreso AS INTEGER), svi.codigo_servicio
		<if test="limite_paginado != null">
			${limite_paginado}
		</if>

	</select>

	<select id="existe" resultType="java.lang.Boolean">
		select count(1) != 0 AS exist from public.servicios_via_ingreso
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="codigo_empresa != null">
				AND codigo_empresa = #{codigo_empresa}
			</if>
			<if test="codigo_sucursal != null">
				AND codigo_sucursal = #{codigo_sucursal}
			</if>
			<if test="parameter != null">
				AND ${parameter} like '${value}'
			</if>
		</trim>
		<if test="limite_paginado != null">
			${limite_paginado}
		</if>
	</select>

</mapper>
